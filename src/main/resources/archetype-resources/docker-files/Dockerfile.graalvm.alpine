FROM debian:11-slim as graalvmalpinebuild
ARG JAVA_VERSION="22.3.r17-grl"
ARG MAVEN_VERSION="3.8.6"
ENV SDKMAN_DIR=/root/.sdkman
RUN apt-get update && apt-get install -y --no-install-recommends tzdata curl zip unzip build-essential libz-dev zlib1g-dev ca-certificates fontconfig locales \
    && rm -rf /var/lib/apt/lists/* \
    && echo "en_US.UTF-8 UTF-8" >> /etc/locale.gen \
    && locale-gen en_US.UTF-8 \
    && curl 'https://get.sdkman.io' | bash \
    && echo "sdkman_auto_answer=true" > $SDKMAN_DIR/etc/config \
    && echo "sdkman_auto_selfupdate=false" >> $SDKMAN_DIR/etc/config \
    && echo "sdkman_insecure_ssl=true" >> $SDKMAN_DIR/etc/config \
    && chmod +x $SDKMAN_DIR/bin/sdkman-init.sh
SHELL ["/bin/bash", "-c"]
RUN source $SDKMAN_DIR/bin/sdkman-init.sh \
        && sdk version \
        && sdk install java $JAVA_VERSION \
        && gu install native-image \
        && gu install js \
        && sdk install maven $MAVEN_VERSION \
        && rm -rf $SDKMAN_DIR/archives/* \
        && rm -rf $SDKMAN_DIR/tmp/*
WORKDIR /myproject
# We get important parameteres as build-arg
ARG GITHUBLOGIN
ARG GITHUBPASSWORD
# and we transfer them as env variable (for maven settings substitution).
ENV GITHUBLOGIN=$GITHUBLOGIN
ENV GITHUBPASSWORD=$GITHUBPASSWORD
COPY pom.xml .
COPY src src
COPY docker-files/ci-settings.xml .
RUN --mount=type=cache,id=mvncache,target=/root/.m2/repository,rw \
	source $SDKMAN_DIR/bin/sdkman-init.sh && \
	mvn -s ci-settings.xml -B -Pnative clean verify

FROM alpine
COPY --from=graalvmalpinebuild /myproject/target/fullgit /
ENTRYPOINT /fullgit
